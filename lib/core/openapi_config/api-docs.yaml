openapi: 3.0.1
info:
  title: N+1 API
  version: 0.0.1
servers:
- url: https://api.nplone.com
  description: Backend server
paths:
  /api/v1/spaces:
    get:
      tags:
      - space
      summary: Получить пространства
      operationId: getSpaces
      parameters:
      - name: size
        in: query
        description: Размер страницы
        required: false
        schema:
          maximum: 100
          type: integer
          format: int32
          default: 50
      - name: page
        in: query
        description: Страница (с 0)
        required: false
        schema:
          type: integer
          format: int32
          default: 0
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SpaceList'
      security:
      - auth: []
    put:
      tags:
      - space
      summary: Создать новое пространство
      operationId: createSpace
      requestBody:
        content:
          application/json:
            schema:
              required:
              - banner
              - data
              - icon
              type: object
              properties:
                icon:
                  type: string
                  description: Иконка пространства
                  format: binary
                banner:
                  type: string
                  description: Баннер пространства
                  format: binary
                data:
                  $ref: '#/components/schemas/SpaceCreate'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SpaceItem'
      security:
      - auth: []
  /api/v1/spaces/{id}/posts:
    get:
      tags:
      - space
      summary: Получить посты
      operationId: getPosts
      parameters:
      - name: id
        in: path
        description: ID пространства
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: Страница
        required: false
        schema:
          type: integer
          format: int64
          default: -1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PostListDto'
    put:
      tags:
      - space
      summary: Создать пост
      operationId: createPost
      parameters:
      - name: id
        in: path
        description: ID пространства
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - data
              - icon
              type: object
              properties:
                icon:
                  type: string
                  description: Иконка поста
                  format: binary
                data:
                  $ref: '#/components/schemas/PostEditDto'
      responses:
        "200":
          description: OK
  /api/v1/transactions/{id}/files:
    get:
      tags:
      - transaction
      summary: Получить прикреплённые файлы транзакции
      operationId: getTransactionFiles
      parameters:
      - name: id
        in: path
        description: ID транзакции
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FileListDto'
    post:
      tags:
      - transaction
      summary: Добавить файл к транзакции
      operationId: addFileToTransaction
      parameters:
      - name: id
        in: path
        description: ID транзакции
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  description: Файл
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FileDto'
  /api/v1/transactions/{id}/create-post:
    post:
      tags:
      - transaction
      operationId: createPost_1
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/transactions/{id}/comments:
    get:
      tags:
      - transaction
      summary: Получить комментарии
      operationId: getComments
      parameters:
      - name: id
        in: path
        description: ID транзакции
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: Страница
        required: false
        schema:
          type: integer
          format: int64
          default: -1
      - name: size
        in: query
        description: Размер страницы
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
          format: int32
          default: 20
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommentListDto'
    post:
      tags:
      - transaction
      summary: Добавить комментарий
      operationId: addComment
      parameters:
      - name: id
        in: path
        description: ID транзакции
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentPostDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommentDto'
  /api/v1/transactions/{id}/comments/{comment}/like:
    post:
      tags:
      - transaction
      summary: Лайкнуть комментарий
      operationId: likeComment
      parameters:
      - name: id
        in: path
        description: ID транзакции
        required: true
        schema:
          type: string
      - name: comment
        in: path
        description: ID комментария
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/v1/register:
    post:
      tags:
      - auth
      summary: Зарегистрировать нового пользователя в системе
      operationId: registerUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRegister'
        required: true
      responses:
        "201":
          description: Created
  /api/v1/providers/initiate-connection:
    post:
      tags:
      - provider
      summary: Создать ссылку для добавления нового провайдера
      operationId: initiateProviderConnection
      parameters:
      - name: Accept-Language
        in: header
        required: false
        schema:
          pattern: "[A-Za-z]*"
          type: string
          default: EN
      - name: provider
        in: query
        required: true
        schema:
          type: string
      - name: segments
        in: query
        required: true
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AccountConnectionInitiationDto'
      security:
      - auth: []
  /api/v1/posts/{id}/like:
    post:
      tags:
      - post
      summary: Лайкнуть пост
      operationId: likePost
      parameters:
      - name: id
        in: path
        description: ID поста
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/posts/{id}/files:
    get:
      tags:
      - post
      summary: Получить прикреплённые файлы транзакции
      operationId: getPostFiles
      parameters:
      - name: id
        in: path
        description: ID транзакции
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FileListDto'
    post:
      tags:
      - post
      summary: Добавить файл к транзакции
      operationId: addFileToPost
      parameters:
      - name: id
        in: path
        description: ID транзакции
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - file
              type: object
              properties:
                file:
                  type: string
                  description: Файл
                  format: binary
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/FileDto'
  /api/v1/posts/{id}/comments:
    get:
      tags:
      - post
      summary: Получить комментарии
      operationId: getPostComments
      parameters:
      - name: id
        in: path
        description: ID транзакции
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: Страница
        required: false
        schema:
          type: integer
          format: int64
          default: -1
      - name: size
        in: query
        description: Размер страницы
        required: false
        schema:
          maximum: 50
          minimum: 1
          type: integer
          format: int32
          default: 20
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommentListDto'
    post:
      tags:
      - post
      summary: Добавить комментарий
      operationId: addPostComment
      parameters:
      - name: id
        in: path
        description: ID транзакции
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentPostDto'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommentDto'
  /api/v1/posts/{id}/comments/{comment}/like:
    post:
      tags:
      - post
      summary: Лайкнуть комментарий
      operationId: likePostComment
      parameters:
      - name: id
        in: path
        description: ID поста
        required: true
        schema:
          type: string
      - name: comment
        in: path
        description: ID комментария
        required: true
        schema:
          type: integer
          format: int64
      responses:
        "200":
          description: OK
  /api/v1/login:
    post:
      tags:
      - auth
      summary: Войти под пользователем
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserLogin'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TokenInfo'
  /api/v1/googlesignin:
    post:
      tags:
      - auth
      summary: Аутентификация через аккаунт Google
      operationId: googleSignIn
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GoogleToken'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TokenInfo'
  /api/v1/transactions/{id}:
    get:
      tags:
      - transaction
      summary: Получить полную информацию от транзакции
      operationId: getTransactionInfo
      parameters:
      - name: id
        in: path
        description: ID транзакции
        required: true
        schema:
          type: string
      - name: space
        in: query
        description: ID пространства для проверки публикации
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransactionDetailsDto'
    patch:
      tags:
      - transaction
      summary: Изменить информацию о транзакции
      operationId: editTransaction
      parameters:
      - name: id
        in: path
        description: ID транзакции
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionEditDto'
        required: true
      responses:
        "200":
          description: OK
  /api/v1/spaces/{id}:
    get:
      tags:
      - space
      summary: Получить полную информацию о пространстве
      operationId: getSpace
      parameters:
      - name: id
        in: path
        description: ID пространства
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Space'
      security:
      - auth: []
    delete:
      tags:
      - space
      summary: Удалить пространство
      operationId: deleteSpace
      parameters:
      - name: id
        in: path
        description: ID пространства
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
      security:
      - auth: []
    patch:
      tags:
      - space
      summary: Изменить пространство
      operationId: editSpace
      parameters:
      - name: id
        in: path
        description: ID пространства
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - data
              type: object
              properties:
                icon:
                  type: string
                  description: Иконка пространства
                  format: binary
                banner:
                  type: string
                  description: Баннер пространства
                  format: binary
                data:
                  $ref: '#/components/schemas/SpaceEdit'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SpaceItem'
      security:
      - auth: []
  /api/v1/posts/{id}:
    get:
      tags:
      - post
      summary: Получить полную информацию о посте
      operationId: getPost
      parameters:
      - name: id
        in: path
        description: ID поста
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PostDetailsDto'
    patch:
      tags:
      - post
      summary: Изменить информацию о посте
      operationId: editPost
      parameters:
      - name: id
        in: path
        description: ID транзакции
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              required:
              - data
              type: object
              properties:
                icon:
                  type: string
                  description: Иконка поста
                  format: binary
                data:
                  $ref: '#/components/schemas/PostEditDto'
      responses:
        "200":
          description: OK
  /static/transaction/{id}.{ext}:
    get:
      tags:
      - static
      summary: Получить файл транзакции
      operationId: getTransactionFile
      parameters:
      - name: id
        in: path
        description: ID изображения
        required: true
        schema:
          type: string
      - name: ext
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: binary
  /static/space/{id}.jpg:
    get:
      tags:
      - static
      summary: Получить изображение пространства
      operationId: getSpaceImage
      parameters:
      - name: id
        in: path
        description: ID изображения
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
  /static/space/default_banner.jpg:
    get:
      tags:
      - static
      summary: Получить изображение баннера пространства по-умолчанию
      operationId: getDefaultSpaceBanner
      responses:
        "200":
          description: OK
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
  /static/space/default.jpg:
    get:
      tags:
      - static
      summary: Получить изображение пространства по-умолчанию
      operationId: getDefaultSpaceImage
      responses:
        "200":
          description: OK
          content:
            image/jpeg:
              schema:
                type: string
                format: binary
  /static/post/{id}.{ext}:
    get:
      tags:
      - static
      summary: Получить файл поста
      operationId: getPostFile
      parameters:
      - name: id
        in: path
        description: ID изображения
        required: true
        schema:
          type: string
      - name: ext
        in: path
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
                format: binary
  /api/v1/user:
    get:
      tags:
      - user
      summary: Получить информацию о пользователе
      operationId: getUserInfo
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserInfo'
      security:
      - auth: []
    delete:
      tags:
      - user
      summary: Удалить пользователя
      operationId: deleteUser
      responses:
        "200":
          description: OK
      security:
      - auth: []
  /api/v1/spaces/{id}/transactions:
    get:
      tags:
      - space
      summary: Изменить транзакции в пространстве
      operationId: getSpaceTransactions
      parameters:
      - name: id
        in: path
        description: ID пространства
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: Cтраница
        required: false
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransactionListDto'
      security:
      - auth: []
  /api/v1/spaces/{id}/posted-transactions:
    get:
      tags:
      - space
      summary: Получить опубликованные транзакции в пространстве
      operationId: getSpacePostedTransactions
      parameters:
      - name: id
        in: path
        description: ID пространства
        required: true
        schema:
          type: string
      - name: page
        in: query
        description: Cтраница
        required: false
        schema:
          type: string
          default: "-1"
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TransactionListDto'
      security:
      - auth: []
  /api/v1/spaces/{id}/banking:
    get:
      tags:
      - space
      summary: Изменить банковскую информацию по пространству
      operationId: getSpaceBankingInfo
      parameters:
      - name: id
        in: path
        description: ID пространства
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/SpaceBankingInfo'
      security:
      - auth: []
  /api/v1/providers:
    get:
      tags:
      - provider
      summary: Получить список провайдеров
      operationId: getProviders
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Provider'
      security:
      - auth: []
  /api/v1/accounts:
    get:
      tags:
      - account
      summary: Получить все счета
      operationId: getAccounts
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Account'
      security:
      - auth: []
  /api/v1/account-redirect/start:
    get:
      tags:
      - account-redirect
      summary: Начать flow добавления провайдера
      operationId: startAccountRedirect
      parameters:
      - name: code
        in: query
        description: Код
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
      security:
      - auth: []
  /api/v1/account-redirect/finish:
    get:
      tags:
      - account-redirect
      summary: Закончить flow добавления провайдера
      operationId: finishAccountRedirect
      parameters:
      - name: state
        in: query
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
      security:
      - auth: []
  /api/v1/transactions/{id}/files/{fid}:
    delete:
      tags:
      - transaction
      summary: Удалить файл из транзакции
      operationId: removeFileFromTransaction
      parameters:
      - name: id
        in: path
        description: ID транзакции
        required: true
        schema:
          type: string
      - name: fid
        in: path
        description: ID файла
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
  /api/v1/posts/{id}/files/{fid}:
    delete:
      tags:
      - post
      summary: Удалить файл из транзакции
      operationId: removeFileFromPost
      parameters:
      - name: id
        in: path
        description: ID транзакции
        required: true
        schema:
          type: string
      - name: fid
        in: path
        description: ID файла
        required: true
        schema:
          type: string
      responses:
        "200":
          description: OK
components:
  schemas:
    SpaceCreate:
      required:
      - name
      - primaryAccount
      type: object
      properties:
        primaryAccount:
          type: string
          description: ID основного счёта
        name:
          type: string
          description: Имя пространства
        website:
          type: string
          description: Вебсайт
        description:
          type: string
          description: Описание
        addressText:
          type: string
          description: Адрес
      description: Данные
    SpaceItem:
      required:
      - icon
      - id
      - mode
      - name
      - primaryAccount
      type: object
      properties:
        id:
          type: string
          description: ID пространства
          format: uuid
        name:
          maxLength: 255
          type: string
          description: Имя пространства
        icon:
          type: string
          description: Ссылка на иконку пространства
        mode:
          type: string
          description: Режим доступа
          enum:
          - PRIVATE
          - INVITATION
          - SUBSCRIPTION
          - PUBLIC
        primaryAccount:
          type: string
          description: ID основного счёта пространства
          format: uuid
      default: Пространство
    PostEditDto:
      required:
      - description
      - title
      - transactions
      type: object
      properties:
        title:
          type: string
          description: Название поста
        description:
          type: string
          description: Описание поста
        transactions:
          type: array
          description: Привязанные транзакции
          items:
            type: string
            description: Привязанные транзакции
      description: Данные
    FileDto:
      required:
      - filename
      - id
      - link
      - size
      type: object
      properties:
        id:
          type: string
          description: ID файла
        filename:
          type: string
          description: Имя файла
        size:
          type: integer
          description: Размер файла в байтах
          format: int64
        link:
          type: string
          description: Ссылка на скачивание файла
      description: Информация о файле
    CommentPostDto:
      type: object
      properties:
        text:
          type: string
          description: Текст комментария
      description: Информация для создания комментария
    CommentDto:
      required:
      - author
      - id
      - liked
      - likes
      - postedAt
      - text
      type: object
      properties:
        id:
          type: integer
          description: ID комментария
          format: int64
        author:
          $ref: '#/components/schemas/UserSummaryDto'
        postedAt:
          type: string
          description: Когда был создан
          format: date-time
        text:
          type: string
          description: Текст
        likes:
          type: integer
          description: Кол-во лайков
          format: int64
        liked:
          type: boolean
          description: Лайкнул ли этот коммент текущий юзер
      description: Информация о комментарии
    UserSummaryDto:
      required:
      - id
      type: object
      properties:
        id:
          type: string
          description: ID пользователя
        name:
          type: string
          description: Имя пользователя
      description: Общая информация о пользователе
    UserRegister:
      required:
      - country
      - email
      - password
      type: object
      properties:
        email:
          type: string
          description: E-Mail пользователя
        password:
          type: string
          description: Пароль пользователя
        country:
          maxLength: 2
          minLength: 2
          type: string
          description: Страна пользователя (согласно ISO 3166-1)
      description: Информация для регистрации пользователя
    AccountConnectionInitiationDto:
      type: object
      properties:
        redirectUri:
          type: string
          description: URI для начала добавления счёта
      description: Информация для flow добавления счётов
    UserLogin:
      required:
      - email
      - password
      type: object
      properties:
        email:
          type: string
          description: E-Mail пользователя
        password:
          type: string
          description: Пароль пользователя
      description: Информация для входа в систему
    TokenInfo:
      required:
      - accessToken
      - userId
      type: object
      properties:
        accessToken:
          type: string
          description: JWT ключ доступа к системе
        userId:
          type: string
          description: "ID пользователя, под которым произошёл вход"
          format: uuid
      default: Информация о ключе доступа
    GoogleToken:
      required:
      - country
      - token
      type: object
      properties:
        token:
          type: string
          description: Токен
        country:
          type: string
          description: Страна
      default: Информация для входа через Google Sign In
    TransactionEditDto:
      type: object
      properties:
        description:
          type: string
          description: Описание
        viewConfiguration:
          $ref: '#/components/schemas/TransactionViewConfiguration'
      description: Изменённая транзакция
    TransactionViewConfiguration:
      required:
      - showAccount
      - showDescription
      - showOriginator
      - showReceiver
      - showType
      type: object
      properties:
        showDescription:
          type: boolean
          description: Показывать описание
        showType:
          type: boolean
          description: Показывать тип
        showOriginator:
          type: boolean
          description: Показывать отправителя
        showReceiver:
          type: boolean
          description: Показывать торговца/принимающую сторону
        showAccount:
          type: boolean
          description: Показывать информацию об счёте отправителя
      description: Информация о доступах к данным транзакции
    SpaceEdit:
      type: object
      properties:
        name:
          type: string
          description: Имя пространства
        website:
          type: string
          description: Вебсайт
        description:
          type: string
          description: Описание
        addressText:
          type: string
          description: Адрес
      description: Данные
    UserInfo:
      required:
      - email
      - id
      type: object
      properties:
        id:
          type: string
          description: ID пользователя
          format: uuid
        email:
          type: string
          description: E-Mail пользователя
        name:
          type: string
          description: ФИО пользователя
        givenName:
          type: string
          description: Имя пользователя
        familyName:
          type: string
          description: Фамилия пользователя
      description: Информация о пользователе
    AccountBalance:
      required:
      - currencyCode
      - scale
      - unscaledValue
      type: object
      properties:
        currencyCode:
          type: string
          description: Код валюты
        scale:
          type: integer
          description: Размерность значения
          format: int32
        unscaledValue:
          type: integer
          description: Безразмерное значение баланса
          format: int64
      description: Баланс счёта
    Merchant:
      required:
      - categoryCode
      - name
      type: object
      properties:
        name:
          type: string
          description: Название продавца
        categoryCode:
          type: integer
          description: Код MMC категории продавца
          format: int32
      description: Информация о продавце
    TransactionAccountDetails:
      required:
      - financialInstitutionId
      - iban
      type: object
      properties:
        financialInstitutionId:
          type: string
          description: "ID финансовой организации, предоставляющей счёт"
        iban:
          type: string
          description: Идентификатор счёта
      description: Информация о счёте транзакции
    TransactionDetailsDto:
      required:
      - amount
      - bookedAt
      - id
      - published
      type: object
      properties:
        id:
          type: string
          description: ID транзакции
        amount:
          $ref: '#/components/schemas/AccountBalance'
        bookedAt:
          type: string
          description: Когда транзакция была подтверждена банком
          format: date-time
        description:
          type: string
          description: Описание
        merchant:
          $ref: '#/components/schemas/Merchant'
        type:
          type: string
          description: Тип транзакции
          enum:
          - UNDEFINED
          - CREDIT_CARD
          - PAYMENT
          - WITHDRAWAL
          - DEFAULT
          - TRANSFER
        accountDetails:
          $ref: '#/components/schemas/TransactionAccountDetails'
        originator:
          $ref: '#/components/schemas/UserSummaryDto'
        published:
          type: boolean
          description: Опубликована
        publisher:
          $ref: '#/components/schemas/UserSummaryDto'
        viewConfiguration:
          $ref: '#/components/schemas/TransactionViewConfiguration'
    FileListDto:
      required:
      - files
      type: object
      properties:
        files:
          type: array
          description: Список файлов
          items:
            $ref: '#/components/schemas/FileDto'
      description: Список файлов
    CommentListDto:
      type: object
      properties:
        comments:
          type: array
          items:
            $ref: '#/components/schemas/CommentDto'
        count:
          type: integer
          format: int32
        nextPage:
          type: integer
          format: int64
    SpaceList:
      required:
      - count
      - items
      - last
      type: object
      properties:
        items:
          type: array
          description: Список пространств
          items:
            $ref: '#/components/schemas/SpaceItem'
        count:
          type: integer
          description: Количество элементов
          format: int32
        last:
          type: boolean
          description: Является ли текущая выборка последней в списке
      default: Список пространств
    Space:
      required:
      - banner
      - icon
      - name
      - primaryAccount
      type: object
      properties:
        primaryAccount:
          type: string
          description: ID основного счёта
        name:
          type: string
          description: Имя пространства
        website:
          type: string
          description: Вебсайт
        description:
          type: string
          description: Описание
        addressText:
          type: string
          description: Адрес
        icon:
          type: string
          description: URL адреса
        banner:
          type: string
          description: URL баннера
      description: Информация о пространстве
    TransactionItemDto:
      required:
      - accountId
      - amount
      - bookedAt
      - comments
      - files
      - id
      - posted
      - type
      type: object
      properties:
        id:
          type: string
          description: ID транзакции
        accountId:
          type: string
          description: ID счёта
        amount:
          $ref: '#/components/schemas/AccountBalance'
        bookedAt:
          type: string
          description: Когда транзакция была подтверждена банком
          format: date-time
        description:
          type: string
          description: Описание
        merchant:
          $ref: '#/components/schemas/Merchant'
        type:
          type: string
          description: Тип транзакции
          enum:
          - UNDEFINED
          - CREDIT_CARD
          - PAYMENT
          - WITHDRAWAL
          - DEFAULT
          - TRANSFER
        posted:
          type: boolean
          description: Опубликована ли транзакция
        comments:
          type: integer
          description: Количество комментариев к транзакции
          format: int32
        files:
          type: integer
          description: Количество файлов к транзакции
          format: int32
      description: Транзакция
    TransactionListDto:
      required:
      - nextPageToken
      - transactions
      type: object
      properties:
        transactions:
          type: array
          description: Транзакции
          items:
            $ref: '#/components/schemas/TransactionItemDto'
        nextPageToken:
          type: string
          description: Токен следующей страницы
      description: Страница с транзакциями
    PostItemDto:
      required:
      - comments
      - descriptionStripped
      - icon
      - id
      - liked
      - likes
      - postedWhen
      - title
      - transactionBalances
      - type
      type: object
      properties:
        id:
          type: integer
          description: ID поста
          format: int64
        postedWhen:
          type: string
          description: Когда был опубликован
          format: date-time
        title:
          type: string
          description: Название поста
        descriptionStripped:
          maxLength: 200
          type: string
          description: Текст поста
        icon:
          type: string
          description: URL иконки
        type:
          type: string
          description: Тип поста
          enum:
          - NEWS
        likes:
          type: integer
          description: Количество лайков
          format: int64
        liked:
          type: boolean
          description: Лайкнул ли пост пользователь
        comments:
          type: integer
          description: Количество комментариев к посту
          format: int64
        transactionBalances:
          type: array
          description: Балансы прикреплённых транзакций
          items:
            $ref: '#/components/schemas/AccountBalance'
      description: Пост
    PostListDto:
      required:
      - nextPageToken
      - posts
      type: object
      properties:
        posts:
          type: array
          description: Посты
          items:
            $ref: '#/components/schemas/PostItemDto'
        nextPageToken:
          type: string
          description: Токен следующей страницы
      description: Страница с постами
    Account:
      required:
      - availableBalance
      - customerSegment
      - financialInstitutionId
      - id
      - identifiers
      - lastUpdateTime
      - name
      - type
      type: object
      properties:
        financialInstitutionId:
          type: string
          description: "ID финансовой организации, предоставляющей счёт"
        id:
          type: string
          description: ID счёта
        name:
          type: string
          description: Название счёта
        type:
          type: string
          description: Тип счёта
          enum:
          - UNDEFINED
          - CHECKING
          - SAVINGS
          - CREDIT_CARD
        availableBalance:
          $ref: '#/components/schemas/AccountBalance'
        identifiers:
          $ref: '#/components/schemas/AccountIdentifiers'
        lastUpdateTime:
          type: string
          description: Время последнего обновления
          format: date-time
        customerSegment:
          type: string
          description: Сегмент счёта
          enum:
          - UNDEFINED
          - PERSONAL
          - BUSINESS
      description: Счёт пользователя
    AccountIdentifiers:
      type: object
      properties:
        iban:
          type: string
          description: IBAN
        bic:
          type: string
          description: BIC
      description: Идентификаторы счёта
    SpaceBankingInfo:
      type: object
      properties:
        total:
          $ref: '#/components/schemas/AccountBalance'
        primaryAccount:
          $ref: '#/components/schemas/Account'
        linkedAccounts:
          type: array
          items:
            $ref: '#/components/schemas/Account'
      description: Информация о банковских данных пространства
    Provider:
      required:
      - bannerImage
      - currency
      - financialInstitutionId
      - financialInstitutionName
      - groupDisplayName
      - iconImage
      - loginHeaderColour
      - market
      - popular
      - uid
      type: object
      properties:
        currency:
          type: string
          description: Валюта провайдера
        displayDescription:
          type: string
          description: Описание
        displayName:
          type: string
          description: Имя
        financialInstitutionId:
          type: string
          description: ID финансовой организации
        financialInstitutionName:
          type: string
          description: Имя финансовой организации
        groupDisplayName:
          type: string
          description: Имя группы провайдеров
        loginHeaderColour:
          type: string
          description: Цвет хедера при логине
        market:
          type: string
          description: Рынок
        uid:
          type: string
          description: UID провайдера
        popular:
          type: boolean
          description: Популярен ли провайдер
        bannerImage:
          type: string
          description: Ссылка на баннер провайдера
        iconImage:
          type: string
          description: Ссылка на иконку провайдера
      description: Провайдер банковских данных
    PostDetailsDto:
      type: object
      properties:
        id:
          type: integer
          format: int64
        postedWhen:
          type: string
          format: date-time
        title:
          type: string
        description:
          type: string
        icon:
          type: string
        type:
          type: string
          enum:
          - NEWS
        postedBy:
          $ref: '#/components/schemas/UserSummaryDto'
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/TransactionItemDto'
  securitySchemes:
    auth:
      type: http
      scheme: bearer
      bearerFormat: JWT
